[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "flowcept"
version = "0.5.3"
requires-python = ">=3.10"
dependencies = [
    "flask-restful",
    "msgpack",
    "omegaconf",
    "pandas",
    "psutil",
    "py-cpuinfo",
    "pymongo",
    "redis",
    "requests"
]
authors = [{name = "Oak Ridge National Laboratory"}]
description = "Capture and query workflow provenance data using data observability"
readme = "README.md"
license = "MIT"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3"
]
keywords = [
    "ai",
    "ml",
    "machine-learning",
    "provenance",
    "lineage",
    "responsible-ai",
    "databases",
    "big-data",
    "provenance",
    "tensorboard",
    "data-integration",
    "scientific-workflows",
    "dask",
    "reproducibility",
    "workflows",
    "parallel-processing",
    "lineage",
    "model-management",
    "mlflow",
    "responsible-ai",
    "data-analytics"
]

[project.urls]
GitHub = "https://github.com/ORNL/flowcept"

[project.optional-dependencies]
dask = ["tomli", "dask[distributed]"]
mlflow = ["mlflow-skinny", "SQLAlchemy", "alembic", "watchdog"]
tensorboard = ["tensorboard", "tensorflow", "tbparse"]
dev = [
    "alembic",
    "confluent-kafka",
    "dask[distributed]",
    "jupyterlab",
    "plotly",
    "pytest",
    "mlflow-skinny",
    "nbmake",
    "ruff",
    "scipy",
    "SQLAlchemy",
    "tbparse",
    "tensorflow",
    "tensorboard",
    "tomli",
    "seaborn",
    "torch",
    "torchvision",
    "watchdog"
]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = ["E501", "D"]
ignore = ["D200", "D212"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
