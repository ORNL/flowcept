version: '3.8'
name: flowcept
services:
  flowcept_redis:
    container_name: flowcept_redis
    image: redis
    ports:
      - 6379:6379

  flowcept_mongo:
    container_name: flowcept_mongo
    image: mongo:latest
    # volumes:
    #   - /Users/rsr/Downloads/mongo_data/db:/data/db
    ports:
      - 27017:27017

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1


#   # This is just for the cases where one does not want to use the same Redis instance for caching and messaging, but
#   # it's not required to have separate instances.
# #  local_interceptor_cache:
# #    container_name: local_interceptor_cache
# #    image: redis
# #    ports:
# #      - 60379:6379

